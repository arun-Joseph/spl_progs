alias functionNum R1;
alias LockID R2;

if(functionNum == 1) then         // Acquire Kernel Lock
  if(CORE == SECONDARY_CORE) then
    while(tsl(PAGER_LOCK) == 1) do
      continue;
    endwhile;
    [PAGER_LOCK] = 0;
  endif;

  while(tsl(KERN_LOCK) == 1) do
    continue;
  endwhile;
endif;

if(functionNum == 2) then         // Acquire Scheduler Lock
  if(CORE == SECONDARY_CORE) then
    while(tsl(PAGER_LOCK) == 1) do
      continue;
    endwhile;
    [PAGER_LOCK] = 0;
  endif;

  while(tsl(SCHEDULER_LOCK) == 1) do
    continue;
  endwhile;
endif;

if(functionNum == 3) then         // Acquire Pager Lock
  while(tsl(PAGER_LOCK) == 1) do
    continue;
  endwhile;
endif;

if(functionNum == 4) then         // Release Lock
  [LockID] = 0;
endif;

return;
