alias counter R0;

counter = 2;
while(counter <= 53) do
  loadi(counter, counter + 13);
  counter = counter + 1;
endwhile;

loadi(59, 3);
loadi(60, 4);
loadi(61, 2);
loadi(62, 5);
loadi(63, 13);
loadi(64, 14);
loadi(65, 7);
loadi(66, 8);
loadi(67, 9);
loadi(68, 10);
loadi(128, 512);
loadi(129, 513);
loadi(132, 516);
loadi(133, 517);

// Init Program
PTBR = PAGE_TABLE_BASE;
[PTBR + 20] = 63;
[PTBR + 21] = "0100";
[PTBR + 22] = 64;
[PTBR + 23] = "0100";
[PTBR + 24] = -1;
[PTBR + 25] = "0000";
[PTBR + 26] = -1;
[PTBR + 27] = "0000";
[PTBR + 28] = 65;
[PTBR + 29] = "0100";
[PTBR + 30] = -1;
[PTBR + 31] = "0000";
[PTBR + 32] = -1;
[PTBR + 33] = "0000";
[PTBR + 34] = -1;
[PTBR + 35] = "0000";
[PTBR + 36] = 66;
[PTBR + 37] = "0110";
[PTBR + 38] = -1;
[PTBR + 39] = "0000";

[PROCESS_TABLE + 16] = 0;
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 19] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 27] = 77;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 31] = 10;

[66*512] = [65*512 + 1];

counter = 496;
while(counter < 512) do
  [77*512 + counter] = -1;
  counter = counter + 2;
endwhile;

// Shell Program
[PTBR + 40] = 63;
[PTBR + 41] = "0100";
[PTBR + 42] = 64;
[PTBR + 43] = "0100";
[PTBR + 44] = -1;
[PTBR + 45] = "0000";
[PTBR + 46] = -1;
[PTBR + 47] = "0000";
[PTBR + 48] = 67;
[PTBR + 49] = "0100";
[PTBR + 50] = 68;
[PTBR + 51] = "0100";
[PTBR + 52] = -1;
[PTBR + 53] = "0000";
[PTBR + 54] = -1;
[PTBR + 55] = "0000";
[PTBR + 56] = 78;
[PTBR + 57] = "0110";
[PTBR + 58] = 79;
[PTBR + 59] = "0110";

[PROCESS_TABLE + 32] = 0;
[PROCESS_TABLE + 33] = 2;
[PROCESS_TABLE + 34] = 2;
[PROCESS_TABLE + 35] = 1;
[PROCESS_TABLE + 36] = TERMINATED;
[PROCESS_TABLE + 43] = 80;
[PROCESS_TABLE + 44] = 0;
[PROCESS_TABLE + 45] = 8*512;
[PROCESS_TABLE + 46] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 47] = 10;

[78*512] = [67*512 + 1];

counter = 496;
while(counter < 512) do
  [80*512 + counter] = -1;
  counter = counter + 2;
endwhile;

// Process Table
counter = 3;
while(counter < 14) do
  [PROCESS_TABLE + counter*16] = 0;
  [PROCESS_TABLE + counter*16 + 4] = TERMINATED;
  counter = counter + 1;
endwhile;

// Open File Table
counter = 0;
while(counter < 32) do
  [OPEN_FILE_TABLE + counter*4] = -1;
  counter = counter + 1;
endwhile;

// Semaphore Table
counter = 0;
while(counter < 32) do
  [SEMAPHORE_TABLE + counter*4] = -1;
  [SEMAPHORE_TABLE + counter*4 + 1] = 0;
  counter = counter + 1;
endwhile;

// Memory Free List
counter = 0;
while(counter < 85) do
  [MEMORY_FREE_LIST + counter] = 1;
  counter = counter + 1;
endwhile;
while(counter < 128) do
  [MEMORY_FREE_LIST + counter] = 0;
  counter = counter + 1;
endwhile;

// File Status Table
counter = 0;
while(counter < 60) do
  [FILE_STATUS_TABLE + counter*4] = -1;
  [FILE_STATUS_TABLE + counter*4 + 1] = -1;
  counter = counter + 1;
endwhile;

// Disk Status Table
[DISK_STATUS_TABLE] = 0;

// System Status Table
[SYSTEM_STATUS_TABLE + 1] = 1;
[SYSTEM_STATUS_TABLE + 2] = 43;
[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 4] = 0;
[SYSTEM_STATUS_TABLE + 5] = 0;
[SYSTEM_STATUS_TABLE + 6] = 14;
[SYSTEM_STATUS_TABLE + 7] = 0;

// Terminal Status Table
[TERMINAL_STATUS_TABLE] = 0;

// Access Lock Table
counter = 0;
while(counter < 22) do
  [ACCESS_LOCK_TABLE + counter] = 0;
  counter = counter + 1;
endwhile;

// Buffer Table
counter = 0;
while(counter < 4) do
  [BUFFER_TABLE + counter*4] = -1;
  [BUFFER_TABLE + counter*4 + 1] = 0;
  [BUFFER_TABLE + counter*4 + 2] = -1;
  counter = counter + 1;
endwhile;

// Disk Map Table
counter = 0;
while(counter < 10) do
  [DISK_MAP_TABLE + 20 + counter] = -1;
  counter = counter + 1;
endwhile;
[DISK_MAP_TABLE + 24] = 9;
[DISK_MAP_TABLE + 25] = 10;

return;
